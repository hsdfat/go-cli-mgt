openapi: 3.0.0
info:
  version: '1.0'
  title: 'Management service'
  description: |


servers:
  - url: '{apiRoot}/mgt-svc/v1'
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      operationId: User's authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUser'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenRequestResponse'
        '400':
          description: Missing param or field
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'        
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/change-password:
    post:
      tags:
        - Authentication
      operationId: change-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassWord'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenRequestResponse'
        '400':
          description: Missing param or field
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'  
        '401':
          description: Unauthentication or not authorize to change username's password
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'                 
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/profile:
    post:
      tags:
        - User
      operationId: Create or Modify User Profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Missing param or field
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'  
        '401':
          description: Unauthentication
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'                 
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - User
      parameters:
        - name: user
          in: query
          description: Username to get authorize
          schema:
            type: string
      responses:
        '204':
          description: Delete
        '400':
          description: Missing param or field
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'  
        '401':
          description: Unauthentication
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'                 
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/change-password:
    post:
      tags:
        - User
      operationId: self change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUser'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenRequestResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/role:
    get:
      tags:
        - User
        - User Authorization
      operationId: Show user role with id
      parameters:
        - name: user
          in: query
          description: username
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRole'
        '400':
          description: Wrong/Missing query/body field
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user or network element
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - User
        - User Authorization
      operationId: SetUserPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRole'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserRole'
        '400':
          description: Wrong/Missing query/body field
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user or network element
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - User
        - User Authorization
      operationId: DeleteUserPermission
      parameters:
        - name: user
          in: query
          description: username
          schema:
            type: string
        - name: permission
          in: query
          description: permission want to delete
          schema:
            type: string
      responses:
        '204':
          description: Delete Success
        '400':
          description: Wrong/Missing query/body field
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user or network element
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/role:
    get:
      tags:
        - List User
        - User Authorization
      operationId: Get list user role
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserRole'
        '400':
          description: Wrong/Missing query/body field
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user or network element
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /role:
    post:
      tags:
        - Permission
      operationId: Create or update role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Wrong/Missing query/body field
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user or network element
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'         
    delete:
      tags:
        - Permission
      operationId: DeletePermissionCliRole
      parameters:
        - name: permission
          in: query
          description: Permission name
          schema:
            type: string
      responses:
        '204':
          description: Delete sucess
        '400':
          description: Wrong/Missing query/body field
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user or network element
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Permission
      operationId: Get permission list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Wrong/Missing query/body field
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user or network element
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'   
  /user/network-element:
    post:
      tags:
        - User
        - Network Element Authorization
      operationId: Set or update Network Element Authorize for user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAllowedNe'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAllowedNe'
        '400':
          description: Wrong/Missing query/body field
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user or network element
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - User
        - Network Element Authorization
      operationId: Delete Network Element Authorize for user
      parameters:
        - name: user
          in: query
          description: User Name to get authorize
          schema:
            type: string
        - name: ne-id
          in: query
          description: Ne Id want to delete
          schema:
            type: number
      responses:
        '204':
          description: Delete success
        '400':
          description: Wrong/Missing query/body field
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user or network element
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/network-elements:
    get:
      tags:
        - User
        - Network Element Authorization
      operationId: Get User's Network Element Authorize
      parameters:
        - name: user
          in: query
          description: User Name to get allowed network elements
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAllowedNeList'
        '400':
          description: Wrong/Missing query
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/network-elements/delete:
    post:
      tags:
        - User
        - Network Element Authorization
      operationId: Delete User's list Network Element Authorize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAllowedNeList'
        required: true
      responses:
        '200':
          description: List delete ne success
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAllowedNeList'
        '400':
          description: Wrong/Missing query
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/profile:
    get:
      tags:
        - List User
        - User
      operationId: Get User Profile List
      responses:
        '200':
          description: List ne
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Wrong/Missing query
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'              
  /users/network-element:
    get:
      tags:
        - List User
        - Network Element Authorization
      operationId: Get User Network Element Authorize List
      responses:
        '200':
          description: List ne
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAllowedNeList'
        '400':
          description: Wrong/Missing query
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /network-element:
    post:
      tags:
        - Network element
      operationId: Create or Update Network element
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NeData'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Wrong/Missing field body
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Network element
      operationId: Delete Network element
      parameters:
        - name: ne-id
          in: query
          description: Ne Id want to delete
          schema:
            type: number
      responses:
        '204':
          description: Delete success
        '400':
          description: Wrong/Missing Query
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Network element
      operationId: getNe
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NeResponse'
        '400':
          description: Wrong/Missing query
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /history:
    get:
      tags:
        - History
      operationId: get history by limit and Network Element name
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: string
        - name: ne-name
          in: query
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          schema:
            type: string
        - name: to
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryResponse'
        '400':
          description: Wrong/Missing Query
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorize
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found user
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - History
      operationId: Save history
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/History'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
    Role:
      type: object
      properties:
        role-id:
          type: integer
          format: int64
        role-name:
          type: string
        priority:
          type: integer
          format: int
        description:
          type: string
    RequestUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    TokenRequestResponse:
      type: object
      properties:
        status:
          type: number
        access-token:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        active:
          type: boolean
        full-name:
          type: string
        phone-number:
          type: string
        fail-attempt:
          type: integer
          format: int32
        email:
          type: string
        created-by:
          type: string
        disable-date:
          type: string
          format: date-time  
        created-date:
          type: string
          format: date-time
    NeData:
      type: object
      properties:
        ne-id:
          type: number
        name:
          type: string  
        type:
          type: string
        master-ip-config:
          type: string
        master-port-config:
          type: integer
        slave-ip-config:
          type: string
        slave-port-config:
          type: integer
        ip-command:
          type: string
        port-command:
          type: integer    
        description:
          type: string
        namespace:
          type: string
    NeResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        ne-list:
          type: array
          items:
            $ref: '#/components/schemas/NeData'
    NeCommandData:
      type: object
      properties:
        ne-id:
          type: number
        ip:
          type: string
        port:
          type: integer
          format: int32
        base-url:
          type: string
    NeCommandResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        ne-command-list:
          type: array
          items:
            $ref: '#/components/schemas/NeCommandData'
    History:
      type: object
      properties:
        username:
          type: string
        user-ip:
          type: string
        command:
          type: string
        ne-name:
          type: string
        result:
          type: boolean
        executed-time:
          type: string
          format: date_time  
    HistoryResponse:
      type: object
      properties:
        limit:
          type: number
        from:
          type: number
        to:
          type: number
        history-list:
          type: array
          items:
            $ref: '#/components/schemas/History'
    UserRole:
      type: object
      properties:
        username:
          type: string
        role:
          type: string
    UserAllowedNe:
      type: object
      properties:
        username:
          type: string
        ne-id:
          type: integer
          format: int
    UserAllowedNeList:
      type: object
      properties:
        username:
          type: string
        ne-id:
          type: array
          items:
            type: integer
    ChangePassWord:
      type: object
      properties:
        username:
          type: string
        old-password:
          type: string 
        new-password:
          type: string           